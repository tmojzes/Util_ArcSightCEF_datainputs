Validating: Util_ArcSightCEF_datainputs Version: 1.0.0
[  P  ] - check_that_extracted_splunk_app_contains_default_app_conf_file - Check that the extracted Splunk App contains a 
            default/app.conf file. 
[  P  ] - check_that_extracted_splunk_app_contains_default_app_conf_file_with_valid_version_number - Check that the extracted Splunk App contains a 
            default/app.conf file that contains an [id] or [launcher] stanza 
            with a version property that is formatted as Major.Minor.Revision. 
[  P  ] - check_that_extracted_splunk_app_does_not_contain_files_with_invalid_permissions - Check that the extracted Splunk App does not contain 
            any files with incorrect permissions. Files must have the owner's 
            permissions include read and write (600). 
[  P  ] - check_that_extracted_splunk_app_does_not_contain_invalid_directories - Check that the extracted Splunk App does not contain 
            any directories with incorrect permissions. Directories and sub 
            directories must have the owner's permissions set to r/w/x (700). 
[  P  ] - check_that_extracted_splunk_app_does_not_contain_prohibited_directories_or_files - Check that the extracted Splunk App does not contain 
            any directories or files that start with a ., or directories that 
            start with __MACOSX. 
[  P  ] - check_that_splunk_app_package_does_not_contain_files_outside_of_app - Check that the Splunk App package does not contain any 
            non-app files. Files within a valid app folder or valid dependencies 
            within a .dependencies folder are permitted, all other files are 
            not. 
[  P  ] - check_that_splunk_app_package_extracts_to_visible_directory - Check that the compressed artifact extracts to a 
            directory that does not start with a . character. 
[  P  ] - check_that_splunk_app_package_has_read_permission - Check that the Splunk app provided does not contain 
            incorrect permissions. Packages must have have the owner's read 
            permission set to r (400). 
[ N/A ] - check_that_splunk_app_package_has_valid_static_dependencies - Check that the Splunk App package contains only valid 
            dependencies. Dependencies are valid if a .dependencies directory 
            contains only valid app packages inside. 
[  P  ] - check_that_splunk_app_package_name_does_not_start_with_period - Check that the Splunk app provided does not start with 
            a . character. 
[ N/A ] - check_that_splunk_app_package_with_static_dependencies_has_app_manifest - Check that the Splunk App package with a .dependencies 
            directory also contains an app folder with an app.manifest. 
[ N/A ] - check_that_splunk_app_package_with_static_dependencies_has_exactly_one_app_folder - Check that the Splunk App package with a .dependencies 
            directory also contains exactly one valid app folder. 
[  P  ] - check_that_splunk_app_package_valid_compressed_file - Check that the Splunk app provided a valid compressed 
            file. 
[  P  ] - check_that_json_schema_is_applicable - Check if json schema is 2.0.0 in app.manifest then fail 
            it. Because schema version of 2.0.0 is not yet compatible with any 
            versions of the Splunk Cloud. So far, all cloud stack are 7.0 and 
            lower but Json Schema 2.0.0 is only compatible with Splunk 7.1+. 
[  P  ] - check_app_icon_2x_dimensions - Check that static/appIcon_2x is 72x72px or less 
[  P  ] - check_app_icon_2x_is_png - Check that static/appIcon_2x is a png file 
[ N/A ] - check_app_icon_alt_2x_dimensions - Check that static/appIconAlt_2x.png is 72x72px or less 
[ N/A ] - check_app_icon_alt_dimensions - Check that static/appIconAlt.png is 36x36px or less 
[ N/A ] - check_app_icon_alt_is_png - Check that static/appIconAlt is a png file 
[  P  ] - check_app_icon_dimensions - Check that static/appIcon is 36x36px or less 
[  P  ] - check_app_icon_is_png - Check that static/appIcon is a png file 
[  P  ] - check_app_logo_2x_dimensions - Check that static/appLogo_2x.png is 320x80px or less 
[  P  ] - check_app_logo_2x_is_png - Check that static/appLogo_2x is a png file 
[  P  ] - check_app_logo_dimensions - Check that static/appLogo.png is 160x40px or less 
[  P  ] - check_app_logo_is_png - Check that static/appLogo is a png file 
[  P  ] - check_config_file_parsing - Check that all config files parse cleanly- no trailing 
            whitespace after continuations, no duplicated stanzas or options. 
[  P  ] - check_manipulation_outside_of_app_container - Check that app conf files do not point to files outside 
            the app container. Because hard-coded paths won't work in Splunk 
            Cloud, we don't consider to check absolute paths. 
[  P  ] - check_no_default_stanzas - Check that app does not contain any .conf files that 
            create global definitions using the [default] stanza. 
[  P  ] - check_validate_no_duplicate_stanzas_in_conf_files - Check that no duplicate stanzas exist in .conf files. 
[  P  ] - check_that_local_does_not_exist - Check that the 'local' directory does not exist. All 
            configuration should be in the 'default' directory. 
[  P  ] - check_filenames_for_spaces - Check that app has no .conf or dashboard filenames that 
            contain spaces. Splunk software does not support such files. 
[  P  ] - check_for_local_meta - Check that the file 'local.meta' does not exist. All 
            metadata permissions should be set in 'default.meta'. 
[  P  ] - check_that_app_name_config_is_valid - Check that the app name does not start with digits 
[ N/A ] - check_app_icon_alt_2x_is_png - Check that static/appIconAlt_2x is a png file 
[ N/A ] - check_that_local_passwords_conf_does_not_exist - Check that local/passwords.conf does not exist. 
            Password files are not transferable between instances. 
[ N/A ] - check_index_definition_has_required_options - Check that all index definitions exist all required 
            options including: homePath, coldPath, and thawedPath. 
[  P  ] - check_indexes_conf_does_not_exist - Check that the app does not create indexes. 
[  P  ] - check_indexes_conf_properties - Check that indexes.conf only contains the required 
            'homePath' , 'coldPath' , and 'thawedPath' properties or the 
            optional 'frozenTimePeriodInSecs' and 'disabled' properties. All 
            other properties are prohibited. This check is cloud only because 
            indexes are not allowed via check_indexes_conf_does_not_exist. 
[ N/A ] - check_validate_default_indexes_not_modified - Check that no default Splunk indexes are modified by 
            the app. 
[ N/A ] - check_props_conf_has_report_option_and_transforms_conf_exist - Check that there is a 'transforms.conf' file when 
            REPORT- options are defined in props.conf. 
[ N/A ] - check_props_conf_has_report_option_and_transforms_conf_has_matching_stanza - Check that each REPORT- in props.conf has an associated 
            stanza in transforms.conf file. 
[ N/A ] - check_props_conf_has_report_option_and_transforms_conf_has_required_option - Check that REPORT- options in props.conf, have either 
            DELIMS or REGEX options in the matching transforms.conf stanza. 
[  P  ] - check_props_conf_has_transforms_option_and_transforms_conf_exist - Check that there is a 'transforms.conf' file when 
            TRANSFORM- options are defined in props.conf. 
[  P  ] - check_props_conf_has_transforms_option_and_transforms_conf_has_matching_stanza - Check that TRANSFORM- options in props.conf have 
            associated stanzas in transforms.conf file. 
[  P  ] - check_props_conf_regex_stanza_name_followed_by_double_colon - Check that the props.conf stanzas (delayedrule, host, 
            rule, or source) are followed by ::. For example: [host::nyc*] 
            [rule::bar_some] 
[  P  ] - check_app_version - Check that the app.conf contains an application version 
            number in the [launcher] stanza. 
[  P  ] - check_for_invalid_app_names - Check that default/app.conf has author = <some words 
            are not about Splunk> must not has attributes label or description 
            with values of Splunk App for XXXX. 
[  P  ] - check_no_install_source_checksum - Check in default/app.conf, install_source_checksum not 
            be set explicitly. 
[  P  ] - check_that_setup_has_not_been_performed - Check that default/app.conf setting is_configured = 
            False. 
[ N/A ] - check_server_conf_only_contains_custom_conf_sync_stanzas_or_diag_stanza - Check that server.conf in an app is only allowed to 
            contain: 1) conf_replication_include. in [shclustering] stanza 2) or 
            EXCLUDE- property in [diag] stanza 
[  P  ] - check_meta_file_parsing - Check that all .meta files parse with no trailing 
            whitespace after continuations with no duplicate stanzas or options. 
[  P  ] - check_that_directory_name_matches_package_id - Check that when decompressed the Splunk App directory 
            name matches the app.conf [package] stanza's id property. 
[  P  ] - check_all_lookups_are_used - Check that all files in the /lookups directory are 
            referenced in transforms.conf. 
[  P  ] - check_capture_groups_in_transforms - Check that all capture groups are used in 
            transforms.conf. Groups not used for capturing should use the 
            non-capture group syntax 
[  M  ] - check_splunk_logo - Check that use of the Splunk logo and name meets Splunk 
            branding guidelines. Customers should avoid using logos that are 
            similar to the Splunk logos including the splunk chevron. These are 
            copyrighted items and should only be used by Splunk. Additionally 
            apps built by 3rd parties should not have names starting with 
            Splunk. 
[  P  ] - check_destructive_commands - Check for the use of malicious shell commands in 
            configuration files or shell scripts to corrupt the OS or Splunk 
            instance. Other scripting languages are covered by other checks. 
[  M  ] - check_fs_writes - Check that applications only write to the following 
            directories <SPLUNK_HOME>/etc/<APP_NAME>/local, 
            <SPLUNK_HOME>/etc/<APP_NAME>/lookup 
            <SPLUNK_HOME>/var/log/<APP_NAME>/<LOG_NAME>.log, 
            <SPLUNK_HOME>/var/log/<APP_NAME>.log <SPLUNK_HOME>/var/run and OS 
            temporary directories. 
[  M  ] - check_hard_coded_paths - Check for hard-coded filepaths in scripts relative to 
            author's local developer environment, or absolute paths. 
[  P  ] - check_validate_no_duplicate_stanzas_in_meta_files - Check that .meta files do not have duplicate stanzas. 
[  M  ] - check_authorization_credentials - Check that no plain text authorization credentials are 
            stored in the app. 
[  M  ] - check_embedded_links - Check that embedded links included in the app are not 
            malicious. 
[  P  ] - check_user_privileges - Check that scripts are not trying to switch into other 
            user accounts, create new users, run sudo. 
[  P  ] - check_hostnames_and_ips - Check that no sensitive hostnames/IPs are stored in the 
            app. 
[  P  ] - check_for_command_injection_through_env_vars - Check for command injection through environment 
            variables. 
[  P  ] - check_for_environment_variable_use_in_python - Check for environment variable manipulation and 
            attempts to monitor sensitive environment variables. 
[  P  ] - check_for_insecure_http_calls_in_python - Check for insecure HTTP calls in Python. 
[  P  ] - check_for_pexpect - Check for use of pexpect to ensure it is only 
            controlling app processes. 
[  P  ] - check_for_secret_disclosure - Check for passwords and secrets. 
[  P  ] - check_for_sensitive_info_in_url - Check for sensitive information being exposed in 
            transit via URL query string parameters 
[  P  ] - check_for_stacktrace_returned_to_user - Check that stack traces are not being returned to an 
            end user. 
[  P  ] - check_for_vbs_command_injection - Check for command injection in VBS files. 
[  P  ] - check_symlink_outside_app - Check no symlink points to the file outside this app 
[  P  ] - check_for_bin_files - Check that files outside of the bin/ and 
            appserver/controllers directory do not have execute permissions and 
            are not .exe files. Splunk recommends 644 for all app files outside 
            of the bin/ directory, 644 for scripts within the bin/ directory 
            that are invoked using an interpreter (e.g. python my_script.py or 
            sh my_script.sh), and 755 for scripts within the bin/ directory that 
            are invoked directly (e.g. ./my_script.sh or ./my_script). 
[  P  ] - check_for_executable_flag - Check that files outside of the bin/ directory do not 
            appear to be executable according to the Unix file command. From man 
            file: files have a ``magic number'' stored in a particular place 
            near the beginning of the file that tells the UNIX operating system 
            that the file is a binary executable. 
[  P  ] - check_for_expansive_permissions - Check that no files have *nix write permissions for all 
            users (xx2, xx6, xx7). Splunk recommends 644 for all app files 
            outside of the bin/ directory, 644 for scripts within the bin/ 
            directory that are invoked using an interpreter (e.g. python 
            my_script.py or sh my_script.sh), and 755 for scripts within the 
            bin/ directory that are invoked directly (e.g. ./my_script.sh or 
            ./my_script). Since appinspect 1.6.1, check that no files have nt 
            write permissions for all users. 
[  P  ] - check_for_hidden_files - Check that there are no hidden files or directories. 
[  M  ] - check_for_urls_in_files - Check that URLs do not include redirect or requests 
            from external web sites. 
[ N/A ] - check_platform_specific_binaries - Check that documentation declares platform-specific 
            binaries. 
[ N/A ] - check_requires_adobe_flash - Check that the app does not use Adobe Flash files. 
[  M  ] - check_install_on_claimed_targets - Check that the app installs on all claimed target 
            platforms. 
[ N/A ] - check_setup_in_distributed_environment - Check that the app can be setup on a distributed system 
            after self-service. Warn if setup configures non-search-head 
            features like inputs. This makes the app incompatible with 
            distributed environments. 
[  P  ] - check_that_all_xml_files_are_well_formed - Check that all XML files are well-formed. 
[  P  ] - check_validate_no_embedded_javascript - Check any XML files that embed JavaScript via CDATA for 
            compliance with Splunk Cloud security policy. 
[  P  ] - check_validate_no_event_handler - Ensure that global event handlers are not used within 
            XML files. 
[ N/A ] - check_inputs_conf - Check that a valid inputs.conf.spec file are located in 
            the README/ directory. 
[ N/A ] - check_inputs_conf_spec_has_stanzas - Check that README/inputs.conf.spec contains stanzas. 
[ N/A ] - check_inputs_conf_spec_has_no_duplicate_properties - Check that modular input stanzas do not contain 
            duplicate arguments. 
[ N/A ] - check_inputs_conf_spec_has_no_duplicate_stanzas - Check that modular inputs do not have duplicate 
            stanzas. 
[ N/A ] - check_inputs_conf_spec_stanza_args_broken_correctly - Check lines breaks are included in configuration when 
            using a modular input. 
[ N/A ] - check_inputs_conf_spec_stanzas_have_properties - Check that modular inputs specify arguments. 
[ N/A ] - check_modular_inputs_scripts_exist - Check that there is a script file in bin/ for each 
            modular input defined in README/inputs.conf.spec. 
[  M  ] - check_external_data_sources - Check that all external data sources are explained in 
            the app's documentation. 
[  P  ] - check_lookup_csv_is_valid - Check that .csv files are not empty, have at least two 
            columns, have headers with no more than 4096 characters, do not use 
            Macintosh-style (\r) line endings, have the same number of columns 
            in every row, and contain only UTF-8 characters. 
[  P  ] - check_validate_json_data_is_well_formed - Check that all JSON files are well formed. 
[ N/A ] - check_saved_search_conf_exists - Check that a savedsearches.conf file exists at 
            default/savedsearches.conf. 
[ N/A ] - check_for_emails_in_saved_search - Check that email alerts (action.email.to) set in 
            savedsearches.conf do not have a default value. 
[ N/A ] - check_for_empty_saved_search_description - Check that default/savedsearches.conf has no 
            description properties that are empty. 
[ N/A ] - check_for_gratuitous_cron_scheduling - Check that default/savedsearches.conf searches are cron 
            scheduled reasonably. Less than five asterisks should be used. 
[ N/A ] - check_for_real_time_saved_searches - Check that no real-time pre-index saved searches are 
            being used in savedsearches.conf. Real-time per-index saved searches 
            are extremely system intensive and should be avoided. 
[ N/A ] - check_for_real_time_saved_searches_for_cloud - Check that no real-time pre-index saved searches are 
            being used in savedsearches.conf. Real-time per-index saved searches 
            are extremely system intensive and should be avoided. 
[ N/A ] - check_for_sched_saved_searches_earliest_time - Check that if a scheduled saved search in 
            savedsearch.conf contains dispatch.earliest_time option, or if a 
            scheduled saved search with auto summary enabled contains 
            auto_summarize.dispatch.earliest_time option 
[ N/A ] - check_for_sched_saved_searches_latest_time - Check that if a savedsearch.conf stanza contains 
            scheduling options it does contain a dispatch.latest_time 
[  P  ] - check_saved_search_specifies_a_search - Check that saved searches have a search string 
            specified. 
[  P  ] - check_saved_searches_are_not_disabled - Check that saved searches are enabled. 
[ N/A ] - check_alert_actions_conf_exists - Check that a valid alert_actions.conf file exists at 
            default/alert_actions.conf. 
[ N/A ] - check_alert_actions_exe_exist - Check that each custom alert action has a valid 
            executable. 
[ N/A ] - check_alert_icon_exists_for_custom_alerts - Check that icon files defined for alert actions in 
            alert_actions.conf exist. Custom Alert Action Component Reference 
[  P  ] - check_for_explict_exe_args - Check whether any custom alert actions have executable 
            arguments. 
[  P  ] - check_for_payload_format - Check that each custom alert action's payload format 
            has a value of xml or json. 
[  P  ] - check_workflow_html_exists_for_custom_alert - Check that each custom alert action has an associated 
            html file. 
[ N/A ] - check_command_conf_exists - Check that commands.conf exists at 
            default/commands.conf. 
[ N/A ] - check_command_scripts_exist - Check that custom search commands have an executable or 
            script per stanza. 
[  P  ] - check_default_meta_exists - Check that a valid default.meta file exists when using 
            a custom search command. 
[ N/A ] - check_ignored_parameters_v1_command - Check that the custom commands attributes maxwait and 
            maxchunksize are only used when chunked = true. Commands.conf 
            reference 
[ N/A ] - check_ignored_parameters_v2_command - Check for ignored arguments in commands.conf when 
            chunked=true. Commands.conf reference 
[  P  ] - check_passauth_and_enableheader - Check that custom search commands using passauth have 
            enableheader set to true. 
[  P  ] - check_requires_preop_and_streaming_preop - Check that custom search commands using requires_preop 
            have streaming_preop set to true. 
[  P  ] - check_requires_srinfo_and_enableheader - Check that custom search commands using requires_srinfo 
            have enableheader set to true. 
[  P  ] - check_required_stanza_fields_are_specified - Check that stanzas in workflow_actions.conf.spec have 
            the required fields, type, and label. 
[  P  ] - check_for_offensive_material - Check that the app does not include any offensive 
            material. 
[ N/A ] - check_workflow_actions_link_uri_does_not_use_http_protocol - Check that for each workflow action in 
            workflow_actions.conf the link.uri property uses the https protocol 
            for external links. Unencrypted http is permitted for internal 
            links. 
[ N/A ] - check_restmap_conf_exists - Check that restmap.conf file exists at 
            default/restmap.conf when using REST endpoints. 
[  P  ] - check_rest_handler_scripts_exist - Check that each stanza in restmap.conf has a matching 
            handler script. if not, fail this app. 
[  P  ] - check_rest_handler_scripts_exist_for_cloud - Check that each stanza in restmap.conf has a matching 
            handler script. if not, throw a warning. 
[  P  ] - check_validate_data_models_conf_file_in_correct_locations - Check that when using data models, the datamodels.conf 
            file only exists in the default directory. 
[ N/A ] - check_for_datamodel_acceleration - Check that the use of accelerated data models do not 
            occur. If data model acceleration is required, developers should 
            provide directions in documentation for how to accelerate data 
            models from within the Splunk Web GUI. data model acceleration 
[  P  ] - check_validate_no_missing_json_data - Check that each stanza in datamodels.conf has a 
            matching JSON file in default/data/models/. 
[ N/A ] - check_appserver_folder_exist - Check that the appserver/ directory exists. 
[ N/A ] - check_default_app_conf_file_exist - Check that the default/app.conf file exists. 
[ N/A ] - check_workflow_actions_conf_exists - Check that a valid workflow_actions.conf file exists at 
            default/workflow_actions.conf. 
[ N/A ] - check_default_folder_exist - Check that the default/ directory exists. 
[ N/A ] - check_default_inputs_conf_file_exist - Check that the default/inputs.conf file exists. 
[ N/A ] - check_default_itsi_kpi_base_search_conf_file_exit - Check that the default/itsi_kpi_base_search.conf file 
            exists. 
[ N/A ] - check_default_itsi_kpi_template_conf_file_exit - Check that the default/itsi_kpi_template.conf file 
            exists. 
[ N/A ] - check_default_itsi_service_template_conf_file_exist - Check that default/itsi_service_template.conf file 
            exists. 
[ N/A ] - check_default_savedsearches_conf_file_exit - Check that the default/savedsearches.conf file exists. 
[ N/A ] - check_metadata_folder_exist - Check that the metadata/ directory exists. 
[ N/A ] - check_default_deep_dive_drilldowns_conf_file_exist - Check that the default/deep_dive_drilldowns.conf file 
            exists. 
[  P  ] - check_for_compiled_python - Check that there are no .pyc or .pyo files included in 
            the app. 
[ N/A ] - check_for_possible_threading - Check for the use of threading, and multiprocesses. 
            Threading must be used with discretion and not negatively affect the 
            Splunk installation as a whole. 
[ N/A ] - check_for_python_files - Check if the app contains python scripts. 
[ N/A ] - check_built_in_import_function - Check that the python __import__ method is not used in 
            a way that can be exploited (e.g., import(conf_setting) is at risk 
            of code injection). 
[ N/A ] - check_custom_commands - Check that use of custom commands is explained in the 
            app's documentation. 
[ N/A ] - check_search_acceleration - Check that use of report acceleration, search 
            acceleration, or summary indexing is explained in the app's 
            documentation. 
[  M  ] - check_dependencies - Check that prerequisites of the app are explained in 
            the app's documentation. All prerequisites must be either packaged 
            with your app, or be available on Splunkbase. 
[  M  ] - check_documented_included_open_source - Check that all open source components used in 
            developing the app are listed in the app's README files with the 
            version number and a link to the project's website. 
[  P  ] - check_basic_readme - Check that the app has a /README file that includes 
            version support, system requirements, installation, configuration, 
            troubleshooting and running of the app, or a link to online 
            documentation. 
[  M  ] - check_editing_and_proofreading - Check that documentation is free of major editing and 
            proofreading (spelling, grammar, punctuation) issues. 
[ N/A ] - check_archived_files - Check that any compressed archives within the main 
            release that need extracting are explained in the app's 
            documentation. 
[ N/A ] - check_outputs_documented - Check that forwarding enabled in 'outputs.conf' is 
            explained in the app's documentation. 
[ N/A ] - check_implements_data_models - Check that the use of datamodels is explained in the 
            app's documentation. 
[ N/A ] - check_implements_inputcsv - Check that the use of inputcsv is explained in the 
            app's documentation. 
[ N/A ] - check_implements_outputcsv - Check that the use of outputcsv is explained in the 
            app's documentation. 
[ N/A ] - check_implements_tscollect - Check that use of 'tscollect' is explained in the app's 
            documentation. 
[ N/A ] - check_initiates_outbound_communications - Check that any outbound network communications in 
            outputs.conf are explained in the app's documentation. 
[  M  ] - check_requires_access_to_files_outside_apps_dir - Check that file access outside of the app's home 
            directory, $SPLUNK_HOME/var/log, $SPLUNK_HOME/var/run, and system 
            temporary directories is explained in the app's documentation. 
[ N/A ] - check_uses_eventgen - Check that use of 'eventgen.conf' is explained in the 
            app's documentation. 
[  M  ] - check_link_includes_contact_info - Check that the app's documentation lists contact 
            information and level of support for the app. Any level of support 
            is acceptable for developer supported apps, as long as it is clearly 
            declared in documentation. Community supported apps must be open 
            source with a public repository. For example: * Email support during 
            weekday business hours (US, West Coast). * Phone support 24x7 @ +1 
            (555) 123-4567. * This is an open source project, no support 
            provided, public repository available. 
[ N/A ] - check_alert_actions_conf_for_alert_execute_cmd_properties - Check that commands referenced in the alert.execute.cmd 
            property of all alert actions are checked for compliance with Splunk 
            Cloud security policy. 
[ N/A ] - check_alert_actions_exe_exist_for_cloud - Check that each custom alert action has a valid 
            executable. 
[ N/A ] - check_audit_conf_black_list - Check that app does not contain audit.conf, as it is 
            prohibited in Splunk Cloud due to its ability to configure/disable 
            cryptographic signing and certificates. 
[ N/A ] - check_authentication_conf_black_list - Check that app does not contain authentication.conf, as 
            it is prohibited in Splunk Cloud due to its ability to configure 
            LDAP authentication and could contain LDAP credentials in plain 
            text. 
[ N/A ] - check_authorize_conf_admin_all_objects_privileges - Check that authorize.conf does not grant excessive 
            administrative permissions to the user. 
[ N/A ] - check_command_scripts_exist_for_cloud - Check that custom search commands have an executable or 
            script per stanza. 
[ N/A ] - check_crawl_conf_black_list - Check that app does not contain crawl.conf as it was 
            deprecated in Splunk 6.0 and as it allows Splunk to introspect the 
            filesystem which is not permitted in Splunk Cloud. 
[ N/A ] - check_datatypesbnf_conf_black_list - Check that app does not contain datatypesbnf.conf, as 
            it is prohibited in Splunk Cloud. 
[ N/A ] - check_default_data_ui_alerts_file_white_list - Check that default/data/ui/alerts contains only .xml or 
            .html files. 
[ N/A ] - check_default_data_ui_html_file_white_list - Check that default/data/ui/html contains only .xml or 
            .html files. 
[ N/A ] - check_default_data_ui_manager_for_plain_text_credentials - Check default/data/ui/manager for any files that use 
            password/key/secret and other keywords. 
[ N/A ] - check_default_data_ui_nav_file_white_list - Check that default/data/ui/nav contains only .xml or 
            .html files. 
[ N/A ] - check_default_data_ui_panels_directory_file_white_list - Check that default/data/ui/panels contains only .xml or 
            .html files. 
[ N/A ] - check_default_data_ui_quickstart_file_white_list - Check that default/data/ui/quickstart contains only 
            .xml or .html files. 
[ N/A ] - check_default_data_ui_views_directory_file_white_list - Check that default/data/ui/views contains only allowed 
            files. 
[ N/A ] - check_default_mode_conf_black_list - Check that app does not contain default-mode.conf is as 
            it is prohibited in Splunk Cloud due to the fact that Splunk Light 
            Forwarders and Splunk Universal Forwarders are not run in Splunk 
            Cloud. 
[ N/A ] - check_deployment_conf_black_list - Check that app does not contain deployment.conf. Apps 
            should leave deployment configuration up to Splunk administrators. 
            Also, deployment.conf has been removed and replaced by: 1) 
            deploymentclient.conf - for configuring Deployment Clients 2) 
            serverclass.conf - for Deployment Server server class configuration. 
[ N/A ] - check_deploymentclient_conf_black_list - Check that app does not contain deploymentclient.conf 
            as it configures the deployment server client. Apps should leave 
            deployment configuration up to Splunk administrators. 
[ N/A ] - check_distsearch_conf_for_concerning_replicated_file_size - Check if concerningReplicatedFileSize in 
            distsearch.conf is larger than 50 MB. 
[ N/A ] - check_for_auto_update_features - Check that the app does not implement auto-update 
            features. 
[  P  ] - check_for_binary_files_without_source_code - Check that all executable binary files have matching 
            source code. 
[  M  ] - check_for_communication_with_third_party_services - Check that the app exports data to 3rd party services. 
            Splunk Cloud Application Security policy defines "Exporting Splunk 
            Data to 3rd party service" as a moderate security risk and may or 
            may not be permitted based on cumulative risk score. 
[ N/A ] - check_for_implementing_tscollect - Check that use of 'tscollect' then fail it. 
[ N/A ] - check_for_index_volume_usage - Check that indexes.conf does not declare volumes. 
[ N/A ] - check_for_inputs_fifo_or_monitor_usage - Check [fifo] or [monitor] stanza is not used in 
            inputs.conf. 
[ N/A ] - check_for_java - Check whether the app contains java files. Java files 
            will be inspected for compliance with Splunk Cloud security policy. 
[  M  ] - check_for_known_vulnerabilities_in_third_party_libraries - Check third party libraries for known vulnerabilities. 
            Splunk Cloud Application Security policy defines "Included 
            application libraries have multiple vulnerabilities not covered by 
            the components in Transit" as a moderate security risk and may or 
            may not be permitted based on cumulative risk score. 
[ N/A ] - check_for_lookup_tables_prefilled_with_customer_data - Check for pre-filled lookup tables. Splunk Cloud 
            Application Security policy defines "Lookup Table with Customer 
            Supplied Data" as a minor risk and may or may not be permitted based 
            on cumulative risk score. 
[  M  ] - check_for_monitoring_of_splunk_cloud_infrastructure - Check that the app does not monitor Splunk Cloud 
            infrastructure. 
[ N/A ] - check_for_perl - Check if the app contains Perl scripts. Perl scripts 
            will be inspected for compliance with Splunk Cloud security policy. 
[  M  ] - check_for_required_access_to_private_infrastructure - Check that the app requires access to private 
            infrastructure. Splunk Cloud Application Security policy defines 
            "Network access required to customer service and or infrastructure" 
            as a minor risk and may or may not be permitted based on cumulative 
            risk score. 
[  M  ] - check_for_reverse_shells - Check that the app does not contain reverse shells. 
[  M  ] - check_for_udp_network_communications - Check for UDP network communication. 
[  M  ] - check_for_unencrypted_network_communications - Check that all network communications are encrypted. 
[ N/A ] - check_indexes_conf_only_uses_splunk_db_variable - Check that indexes defined in indexes.conf use relative 
            paths starting with $SPLUNK_DB. 
[ N/A ] - check_inputs_conf_for_batch - Check that batch input accesses files in a permitted 
            way. To be permissible, the batch input must meet the following 
            criteria: 1) The file path needs to match a file in the directory 
            "$SPLUNK_HOME/var/spool/splunk/" 2) The file name needs to be 
            application specific "$SPLUNK_HOME/etc/apps/" 3) The file name 
            should not end with "stash" or "stash_new" 
[ N/A ] - check_inputs_conf_for_fschange - Check that default/inputs.conf or local/inputs.conf 
            does not contain a fschange stanza. 
[ N/A ] - check_inputs_conf_for_global_settings - Check that default/inputs.conf or local/inputs.conf 
            does not use any global settings. 
[ N/A ] - check_inputs_conf_for_http_global_usage - Check that default/inputs.conf or local/inputs.conf 
            does not contain a [http] stanza. 
[ N/A ] - check_inputs_conf_for_splunk_tcp - Check that default/inputs.conf or local/inputs.conf 
            does not contain a splunktcp stanza. 
[ N/A ] - check_inputs_conf_for_splunktcptoken - Check that default/inputs.conf or local/inputs.conf 
            does not contain a splunktcptoken stanza. 
[ N/A ] - check_inputs_conf_for_ssl - Check that inputs.conf does not have any SSL inputs. 
[ N/A ] - check_inputs_conf_for_tcp - Check that default/inputs.conf or local/inputs.conf 
            does not contain a tcp stanza. 
[ N/A ] - check_inputs_conf_for_udp - Check that inputs.conf does not have any UDP inputs. 
[ N/A ] - check_instance_cfg_conf_black_list - Check that app does not contain instance.cfg.conf. Apps 
            should not configure server/instance specific settings. 
[ N/A ] - check_literals_conf_black_list - Check that app does not contain literals.conf. Apps 
            should not alter/override text strings displayed in Splunk Web. 
[ N/A ] - check_lookups_white_list - Check that lookups/ contains only approved file types 
            (.csv, .csv.default, .csv.gz, .csv.tgz, .kmz) or files formatted as 
            valid csv. 
[ N/A ] - check_messages_conf_black_list - Check that app does not contain messages.conf. Apps 
            should not alter/override messages/externalized strings. 
[  P  ] - check_metadata_white_list - Check that the metadata/ directory only contains .meta 
            files. 
[ N/A ] - check_modular_inputs_scripts_exist_for_cloud - Check that there is a script file in bin/ for each 
            modular input defined in README/inputs.conf.spec. 
[ N/A ] - check_outputs_conf_black_list - Check that app does not contain outputs.conf as 
            forwarding is not permitted in Splunk Cloud. 
[ N/A ] - check_pubsub_conf_black_list - Check that app does not contain pubsub.conf as it 
            defines a custom client for the deployment server. Apps should leave 
            deployment configuration up to Splunk administrators. 
[ N/A ] - check_scripted_inputs_cmd_path_pattern - Check the cmd path pattern of scripted input defined in 
            inputs.conf 
[ N/A ] - check_segmenters_conf_black_list - Check that app does not contain segmenters.conf. A 
            misconfigured segmenters.conf can result in unsearchable data that 
            could only be addressed by re-indexing and segmenters.conf 
            configuration is system-wide. 
[ N/A ] - check_serverclass_conf_black_list - Check that app does not contain serverclass.conf as it 
            defines deployment server classes for use with deployment server. 
            Apps should leave deployment configuration up to Splunk 
            administrators. 
[ N/A ] - check_serverclass_seed_xml_conf_black_list - Check that app does not contain 
            serverclass.seed.xml.conf as it configures deploymentClient to seed 
            a Splunk installation with applications at startup time. Apps should 
            leave deployment configuration up to Splunk administrators. 
[ N/A ] - check_setup_xml_for_incorrect_password_rest_endpoint - Check that all passwords configured in setup.xml are 
            stored in the storage/passwords endpoint. 
            (Documentation)[http://docs.splunk.com/Documentation/Splunk/6.4.2/AdvancedDev/SetupExampleCredentials] 
[ N/A ] - check_source_classifier_conf_black_list - Check that app does not contain 
            source-classifier.conf.conf as it configures system-wide settings 
            for ignoring terms (such as sensitive data). 
[ N/A ] - check_sourcetypes_conf_black_list - Check that app does not contain sourcetypes.conf as it 
            is a machine-generated file that stores source type learning rules. 
            props.conf should be used to define sourcetypes. 
[ N/A ] - check_splunk_launch_conf_black_list - Check that app does not contain splunk-launch.conf as 
            it defines environment values used at startup time. System-wide 
            environment variables should be left up to Splunk administrators. 
[  P  ] - check_static_directory_file_white_list - Check that the static/ directory contains only known 
            file types. 
[ N/A ] - check_telemetry_conf_black_list - Check that app does not contain telemetry.conf as it 
            controls a Splunk-internal feature that should not be configured by 
            apps. 
[  P  ] - check_that_app_contains_any_windows_specific_components - Check that the app contains MS Windows specific 
            components, which will not function correctly in Splunk Cloud whose 
            OS should be Linux x64. 
[  P  ] - check_that_no_configurations_of_default_source_type_in_props_conf - Check that the app does not contain configurations of 
            default source type in props.conf, which will overwrite the 
            configurations of default source types in system/default/props.conf 
            then it will affect other apps in splunk enterprise/cloud. 
[ N/A ] - check_that_passwords_conf_not_exist - Check that the app does not have 
            default/passwords.conf, otherwise, warn it. 
[  P  ] - check_transforms_conf_for_external_cmd - Check that transforms.conf does not contain any 
            transforms with an external_cmd=<string> attribute. 
[ N/A ] - check_user_seed_conf_black_list - Check that app does not contain user-seed.conf as it is 
            used to preconfigure default login and password information. 
[ N/A ] - check_wmi_conf_black_list - Check that app does not contain wmi.conf is as it is 
            prohibited in Splunk Cloud due to its ability to configure Splunk to 
            ingest data via Windows Management Instrumentation, which should be 
            done via forwarder. Forwarders are not permitted in Splunk Cloud. 
[ N/A ] - check_web_conf - Check that web.conf only defines [endpoint:] and 
            [expose:] stanzas, with [expose:*] only containing pattern= and 
            methods=. 
[ N/A ] - check_web_conf_expose_patterns_have_restmap_matches - Check that apps only expose web endpoints that are 
            defined by the Splunk App within restmap.conf. Each web.conf 
            [expose:] stanza should have the property pattern= which defines a 
            url pattern to expose. Each url pattern exposed should correspond to 
            a stanza within restmap.conf with a url pattern defined with the 
            match= property, or for the case of [admin:] stanzas a combination 
            of match= and members= properties. 
[ N/A ] - check_authorize_conf_capability_not_modified - Check that authorize.conf does not contain any modified 
            capabilities. 
[ N/A ] - check_for_default_values_for_modviz - check the property defined in spec file of 
            README/savedsearches.conf.spec if the property is defined in spec 
            file and does not provide a default value in 
            default/savedsearches.conf, this check should fail. 
[ N/A ] - check_for_formatter_html_bad_nodes - Check 
            appserver/static/visualizations/<viz_name>/formatter.html for bad 
            nodes that are removed by Splunk's 
            .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered. 
[ N/A ] - check_for_formatter_html_comments - Check 
            appserver/static/visualizations/<viz_name>/formatter.html for 
            comments that are removed by Splunk's 
            .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered. 
[ N/A ] - check_for_formatter_html_css_expressions - Check 
            appserver/static/visualizations/<viz_name>/formatter.html for css 
            expressions from all tags that are replaced by Splunk's 
            <code>.../search_mrsparkle/exposed/js/util/htmlcleaner.js</code> 
            when rendered.</p> 
[ N/A ] - check_for_formatter_html_inappropriate_attributes - Check 
            appserver/static/visualizations/<viz_name>/formatter.html for 
            inappropriate attributes that are removed by Splunk's 
            .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered. 
[ N/A ] - check_for_formatter_html_inline_style_attributes - Check 
            appserver/static/visualizations/<viz_name>/formatter.html for inline 
            style attributes from all tags that are removed by Splunk's 
            <code>.../search_mrsparkle/exposed/js/util/htmlcleaner.js</code> 
            when rendered.</p> 
[ N/A ] - check_for_matching_stanza_visualization_directory - Check that each custom visualization stanza in 
            default/visualizations.conf has a matching directory in the 
            appserver/static/visualizations/ directory. 
[ N/A ] - check_for_required_files_for_visualization - Check that each custom visualization stanza in 
            default/visualizations.conf has some required source files in the 
            appserver/static/visualizations/<visualization_name>/ directory. 
[ N/A ] - check_for_visualizations_directory - Check that custom visualizations have an 
            appserver/static/visualizations/ directory. 
[ N/A ] - check_for_visualizations_preview_png - Check the required file 
            appserver/static/visualizations/<viz_name>/preview.png exists for 
            the visualization 
[ N/A ] - check_that_visualizations_conf_has_matching_default_meta_stanza - Check that each stanza in default/vizualizations.conf 
            has a matching stanza in metadata/default.meta`. 
[ N/A ] - check_if_outputs_conf_exists - Check that forwarding enabled in 'outputs.conf' is 
            failed in cloud 
[ N/A ] - check_for_simple_xml_list_element - Check Simple XML files for <list> element used in 
            dashboards 
[ N/A ] - check_for_simple_xml_option_element_with_deprecated_attribute_value - Check Simple XML files for <option> element with the 
            deprecated option value "refresh.auto.interval" i.e. 
[ N/A ] - check_for_splunk_js_header_and_footer_view - Checks that views are not importing 
            splunkjs/mvc/headerview or splunkjs/mvc/footerrview. These are 
            replaced by LayoutView in Splunk 6.5. LayoutView is not backwards 
            compatible to Splunk 6.4 or earlier. Only use LayoutView if you are 
            only targeting Splunk 6.5 or above. 
[  P  ] - check_limits_conf - Check that default/limits.conf has not been included. 
[ N/A ] - check_for_viewstates_conf - Check that default/viewstates.conf does not exist in 
            the app. 
            (http://docs.splunk.com/Documentation/Splunk/6.0/AdvancedDev/Migration#Viewstates_are_no_longer_supported_in_simple_XML) 
[  P  ] - check_for_advanced_xml_appserver_modules_directory - Check for Module System appserver/modules directory. 
            The Module system was deprecated in Splunk 6.3 as part of the 
            advanced XML deprecation. See: 
            http://docs.splunk.com/Documentation/Splunk/latest/Module 
[ N/A ] - check_for_advanced_xml_module_elements - Check for Advanced XML <module> elements. The Module 
            system was deprecated in Splunk 6.3 as part of the advanced XML 
            deprecation. See: 
            http://docs.splunk.com/Documentation/Splunk/latest/Module 
[ N/A ] - check_for_advanced_xml_view_element - Check for Advanced XML <view> elements that do not have 
            the redirect or html types. 
[ N/A ] - check_for_advanced_xml_web_conf_endpoints - Check for Module System web.conf endpoints. The Module 
            system was deprecated in Splunk 6.3 as part of the advanced XML 
            deprecation. See: 
            http://docs.splunk.com/Documentation/Splunk/latest/Module 
[  P  ] - check_for_django_bindings - Check for use of Django bindings. 
[ N/A ] - check_for_simple_xml_chart_element_with_deprecated_option_names - Check for Simple XML <chart> panels with deprecated 
            options charting.axisLabelsY.majorTickSize or 
            charting.axisLabelsY.majorLabelVisibility. 
[ N/A ] - check_for_simple_xml_option_element_with_name_previewResults - Check for the deprecated <option name='previewResults'> 
            in Simple XML files. 
[ N/A ] - check_for_simple_xml_searchTemplate_element - Check for the deprecated <searchTemplate> element in 
            Simple XML files. Use the <search> element instead. 
[ N/A ] - check_for_simple_xml_seed_element - Check for the deprecated <seed> option in Simple XML 
            forms. Use the <initialValue> element instead. 
[ N/A ] - check_for_noninteger_height_option - Check that <option name="height"> uses an integer for 
            the value. Do not use <option name="height">[value]px</option>. 
[ N/A ] - check_for_simple_xml_single_element_with_deprecated_option_names - Check Simple XML files for <single> panels with 
            deprecated options 'additionalClass', 'afterLabel', 'beforeLabel', 
            'classField', 'linkFields', 'linkSearch', 'linkView' 
[ N/A ] - check_for_splunk_js_d3chartview - Checks that views are not importing d3chartview. 
[ N/A ] - check_for_splunk_js_googlemapsview - Checks that views are not importing googlemapsview. 
[ N/A ] - check_for_splunk_web_legacy_mode - Check that the 'appServerPorts' property in the 
            web.conf does not contain port 0. 
[ N/A ] - check_web_conf_for_simple_xml_force_flash_charting - Check that a web.conf does not use the property 
            'simple_xml_force_flash_charting'. 
[ N/A ] - check_web_conf_for_simple_xml_module_render - Check that web.conf does not use the 
            simple_xml_module_render property. 
[ N/A ] - check_for_console_log_injection_in_javascript - Check if any sensitive data leakage in console log 
[  P  ] - check_for_iframe_in_javascript - Check if the app contains possible iframe in javascript 
            files, templates or html pages. 
[ N/A ] - check_for_insecure_http_request_in_javascript - Check if the app contain possible insecure http request 
            in javascript files. 
[  P  ] - check_for_reflected_xss_in_javascript - Check if possible reflected xss in javascript 
[ N/A ] - check_for_remote_code_execution_in_javascript - Check if the app contain possible remote code execution 
            in javascript files. 
[ N/A ] - check_for_stored_xss_in_javascript - Check if possible stored xss in javascript 
[ N/A ] - check_for_udp_communication_in_javascript - Check if the app contains udp communication in 
            javascript files. 
[ N/A ] - check_for_weak_encryption_and_hashing_in_javascript - Check if any weak encryption in javascript 
[ N/A ] - check_authentication_conf_does_not_have_bindDNPassword_property - Check that stanzas in authentication.conf do not use 
            the the bindDNpassword property. 
[ N/A ] - check_saml_auth_should_not_turn_off_signed_assertion - Check that saml-* stanzas in authentication.conf do not 
            turn off signedAssertion property 
[  P  ] - check_documentation_language - Check that documentation is in English. 


A default value of 25 for max-messages will be used.
Cloud operations simple application check This group serves to help validate 
simple applications in an effort to try and automate the validation process for 
cloud operations. 
    Check that the app exports data to 3rd party services. Splunk Cloud 
    Application Security policy defines "Exporting Splunk Data to 3rd party 
    service" as a moderate security risk and may or may not be permitted based 
    on cumulative risk score. 
        MANUAL_CHECK: Please check whether the app is sending data to third- 
            party services, which is not recommended. 
    Check third party libraries for known vulnerabilities. Splunk Cloud 
    Application Security policy defines "Included application libraries have 
    multiple vulnerabilities not covered by the components in Transit" as a 
    moderate security risk and may or may not be permitted based on cumulative 
    risk score. 
        MANUAL_CHECK: Please check for known vulnerabilities in third-party 
            libraries. Use these links: 
            https://web.nvd.nist.gov/view/vuln/search. and 
            https://nvd.nist.gov/cvss.cfm 
    Check that the app does not monitor Splunk Cloud infrastructure. 
        MANUAL_CHECK: Please check for monitoring of Splunk Cloud 
            infrastructure. 
    Check that the app requires access to private infrastructure. Splunk 
    Cloud Application Security policy defines "Network access required to 
    customer service and or infrastructure" as a minor risk and may or may not 
    be permitted based on cumulative risk score. 
        MANUAL_CHECK: Please check for required access to private 
            infrastructure. 
    Check that the app does not contain reverse shells. 
        MANUAL_CHECK: Please check for reverse shells. 
    Check for UDP network communication. 
        MANUAL_CHECK: Please check for inbound or outbound UDP network 
            communications.Any programmatic UDP network communication is 
            prohibited due to security risks in Splunk Cloud and App 
            Certification.The use or instruction to configure an app using 
            Settings -> Data Inputs -> UDP within Splunk is permitted. (Note: 
            UDP configuration options are not available in Splunk Cloud and as 
            such do not impose a security risk. 
    Check that all network communications are encrypted. 
        MANUAL_CHECK: Please check for inbound or outbound unencrypted 
            network communications.All communications with Splunk Cloud must be 
            encrypted. 
Calls to external data sources 
    Check that all external data sources are explained in the app's 
    documentation. 
        MANUAL_CHECK: Documentation will be read during code review. 
Intellectual property standards 
    Check that use of the Splunk logo and name meets Splunk branding 
    guidelines. Customers should avoid using logos that are similar to the 
    Splunk logos including the splunk chevron. These are copyrighted items and 
    should only be used by Splunk. Additionally apps built by 3rd parties should 
    not have names starting with Splunk. 
        MANUAL_CHECK: Branding will be inspected during code review. 
Malware, viruses, malicious content, user security standards 
    Check that no plain text authorization credentials are stored in the 
    app. 
        MANUAL_CHECK: Code will be manually inspected during code review. 
    Check that embedded links included in the app are not malicious. 
        MANUAL_CHECK: Links will be manually inspected during code review. 
Operating system standards 
    Check that applications only write to the following directories 
    <SPLUNK_HOME>/etc/<APP_NAME>/local, <SPLUNK_HOME>/etc/<APP_NAME>/lookup 
    <SPLUNK_HOME>/var/log/<APP_NAME>/<LOG_NAME>.log, 
    <SPLUNK_HOME>/var/log/<APP_NAME>.log <SPLUNK_HOME>/var/run and OS temporary 
    directories. 
        MANUAL_CHECK: File access will be inspected during code review. 
    Check for hard-coded filepaths in scripts relative to author's local 
    developer environment, or absolute paths. 
        MANUAL_CHECK: Found possible hard-coded path '/Stable"'.File: 
            app.manifest, Line: 22. File: app.manifest Line Number: 22 
        MANUAL_CHECK: Found possible hard-coded path 
            '/SecretVisons/Util_ArcSightCEF_datainputs/blob/master/source/ver%201.0.0/Util_ArcSightCEF_datainputs/README"'.File: 
            app.manifest, Line: 28. File: app.manifest Line Number: 28 
        MANUAL_CHECK: Found possible hard-coded path 
            '/SecretVisons/Util_ArcSightCEF_datainputs/blob/master/docs/Util_ArcSightCEF_datainputs_1_0_0_release_notes.pdf"'.File: 
            app.manifest, Line: 38. File: app.manifest Line Number: 38 
        MANUAL_CHECK: Found possible hard-coded path 
            '/SecretVisons/Util_ArcSightCEF_datainputs/tree/master/docs'.File: 
            README, Line: 17. File: README Line Number: 17 
        MANUAL_CHECK: Found possible hard-coded path 
            '/SecretVisons/Util_ArcSightCEF_datainputs'.File: README, Line: 22. 
            File: README Line Number: 22 
        MANUAL_CHECK: Found possible hard-coded path '/>'.File: LICENSE, 
            Line: 4. File: LICENSE Line Number: 4 
        MANUAL_CHECK: Found possible hard-coded path '/licenses/>.'.File: 
            LICENSE, Line: 648. File: LICENSE Line Number: 648 
        MANUAL_CHECK: Found possible hard-coded path '/licenses/>.'.File: 
            LICENSE, Line: 667. File: LICENSE Line Number: 667 
        MANUAL_CHECK: Found possible hard-coded path 
            '/philosophy/why-not-lgpl.html>.'.File: LICENSE, Line: 674. File: 
            LICENSE Line Number: 674 
        MANUAL_CHECK: Found possible hard-coded path 
            '/SecretVisons/Util_ArcSightCEF_datainputs/tree/master/docs'.File: 
            docs/REFERENCES, Line: 2. File: docs/REFERENCES Line Number: 2 
Source code and binaries standards 
    Check that URLs do not include redirect or requests from external web 
    sites. 
        MANUAL_CHECK: A file was detected that contains that a url. Match: 
            https://github.com/SecretVisons/Util_ArcSightCEF_datainputs/blob/master/source/ver%201.0.0/Util_ArcSightCEF_datainputs/README" 
            File: app.manifest Line: 28 File: app.manifest Line Number: 28 
        MANUAL_CHECK: A file was detected that contains that a url. Match: 
            https://github.com/SecretVisons/Util_ArcSightCEF_datainputs/blob/master/docs/Util_ArcSightCEF_datainputs_1_0_0_release_notes.pdf" 
            File: app.manifest Line: 38 File: app.manifest Line Number: 38 
        MANUAL_CHECK: A file was detected that contains that a url. Match: 
            https://github.com/SecretVisons/Util_ArcSightCEF_datainputs/tree/master/docs 
            File: README Line: 17 File: README Line Number: 17 
        MANUAL_CHECK: A file was detected that contains that a url. Match: 
            https://github.com/SecretVisons/Util_ArcSightCEF_datainputs File: 
            README Line: 22 File: README Line Number: 22 
        MANUAL_CHECK: A file was detected that contains that a url. Match: 
            http://fsf.org/> File: LICENSE Line: 4 File: LICENSE Line Number: 4 
        MANUAL_CHECK: A file was detected that contains that a url. Match: 
            http://www.gnu.org/licenses/>. File: LICENSE Line: 648 File: LICENSE 
            Line Number: 648 
        MANUAL_CHECK: A file was detected that contains that a url. Match: 
            http://www.gnu.org/licenses/>. File: LICENSE Line: 667 File: LICENSE 
            Line Number: 667 
        MANUAL_CHECK: A file was detected that contains that a url. Match: 
            http://www.gnu.org/philosophy/why-not-lgpl.html>. File: LICENSE 
            Line: 674 File: LICENSE Line Number: 674 
        MANUAL_CHECK: A file was detected that contains that a url. Match: 
            https://github.com/SecretVisons/Util_ArcSightCEF_datainputs/tree/master/docs 
            File: docs/REFERENCES Line: 2 File: docs/REFERENCES Line Number: 2 
        MANUAL_CHECK: A url 
            https://github.com/SecretVisons/Util_ArcSightCEF_datainputs was 
            detected in the following files, (File: README, Linenolist: [22]) 
        MANUAL_CHECK: A url 
            https://github.com/SecretVisons/Util_ArcSightCEF_datainputs/tree/master/docs 
            was detected in the following files, (File: README, Linenolist: 
            [17]), (File: docs/REFERENCES, Linenolist: [2]) 
        MANUAL_CHECK: A url 
            https://github.com/SecretVisons/Util_ArcSightCEF_datainputs/blob/master/docs/Util_ArcSightCEF_datainputs_1_0_0_release_notes.pdf" 
            was detected in the following files, (File: app.manifest, 
            Linenolist: [38]) 
        MANUAL_CHECK: A url 
            https://github.com/SecretVisons/Util_ArcSightCEF_datainputs/blob/master/source/ver%201.0.0/Util_ArcSightCEF_datainputs/README" 
            was detected in the following files, (File: app.manifest, 
            Linenolist: [28]) 
        MANUAL_CHECK: A url http://fsf.org/> was detected in the following 
            files, (File: LICENSE, Linenolist: [4]) 
        MANUAL_CHECK: A url http://www.gnu.org/licenses/>. was detected in 
            the following files, (File: LICENSE, Linenolist: [648, 667]) 
        MANUAL_CHECK: A url http://www.gnu.org/philosophy/why-not-lgpl.html>. 
            was detected in the following files, (File: LICENSE, Linenolist: 
            [674]) 
Documentation standards 
    Check that prerequisites of the app are explained in the app's 
    documentation. All prerequisites must be either packaged with your app, or 
    be available on Splunkbase. 
        MANUAL_CHECK: Documentation will be read during code review. 
    Check that all open source components used in developing the app are 
    listed in the app's README files with the version number and a link to the 
    project's website. 
        MANUAL_CHECK: Documentation will be read during code review. 
    Check that documentation is free of major editing and proofreading 
    (spelling, grammar, punctuation) issues. 
        MANUAL_CHECK: Documentation will be read during code review. 
Appropriate use of sensitive functionality 
    Check that file access outside of the app's home directory, 
    $SPLUNK_HOME/var/log, $SPLUNK_HOME/var/run, and system temporary directories 
    is explained in the app's documentation. 
        MANUAL_CHECK: File access will be inspected during code review. 
Platform targets and claimed supported Splunk Enterprise versions 
    Check that the app installs on all claimed target platforms. 
        MANUAL_CHECK: App will be checked during code review. 
Support requirements 
    Check that the app's documentation lists contact information and level 
    of support for the app. Any level of support is acceptable for developer 
    supported apps, as long as it is clearly declared in documentation. 
    Community supported apps must be open source with a public repository. For 
    example: * Email support during weekday business hours (US, West Coast). * 
    Phone support 24x7 @ +1 (555) 123-4567. * This is an open source project, no 
    support provided, public repository available. 
        MANUAL_CHECK: Documentation will be read during code review. 


Util_ArcSightCEF_datainputs Report Summary:

       skipped:  0
       success: 91
  manual_check: 20
       failure:  0
       warning:  0
         error:  0
not_applicable: 162
-------------------
         Total: 273

Please note that more issues could be found out later during the optional manual review process.


Validating: Util_ArcSightCEF_datainputs Version: 1.0.0
...................................................................................................................................................
.........................................................................
.................................

A default value of 25 for max-messages will be used.


Util_ArcSightCEF_datainputs Report Summary:

       skipped:  0
       success: 91
  manual_check: 20
       failure:  0
       warning:  0
         error:  0
not_applicable: 162
-------------------
         Total: 273

Please note that more issues could be found out later during the optional manual review process.


Validating: Util_ArcSightCEF_datainputs Version: 1.0.0
...................................................................................................................................................
.........................................................................
.................................

A default value of 25 for max-messages will be used.


Util_ArcSightCEF_datainputs Report Summary:

       skipped:  0
       success: 91
  manual_check: 20
       failure:  0
       warning:  0
         error:  0
not_applicable: 162
-------------------
         Total: 273

Please note that more issues could be found out later during the optional manual review process.


